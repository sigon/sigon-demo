<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sigon.demo.dao.mapper.BookMapper">
    <resultMap id="BaseResultMap" type="com.sigon.demo.domain.model.Book">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="author" jdbcType="VARCHAR" property="author" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="publish_date" jdbcType="DATE" property="publishDate" />
        <result column="create_date" jdbcType="DATE" property="createDate" />
        <result column="modify_date" jdbcType="DATE" property="modifyDate" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, title, author, description, publish_date, create_date, modify_date
    </sql>
    <select id="selectByExample" parameterType="com.sigon.demo.domain.model.BookExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from book
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from book
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.sigon.demo.domain.model.BookExample">
        delete from book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.sigon.demo.domain.model.Book">
        insert into book (id, title, author, 
            description, publish_date, create_date, 
            modify_date)
        values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
            #{description,jdbcType=VARCHAR}, #{publishDate,jdbcType=DATE}, #{createDate,jdbcType=DATE}, 
            #{modifyDate,jdbcType=DATE})
    </insert>
    <insert id="insertSelective" parameterType="com.sigon.demo.domain.model.Book">
        insert into book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="publishDate != null">
                publish_date,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="modifyDate != null">
                modify_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null">
                #{publishDate,jdbcType=DATE},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=DATE},
            </if>
            <if test="modifyDate != null">
                #{modifyDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sigon.demo.domain.model.BookExample" resultType="java.lang.Long">
        select count(*) from book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update book
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.author != null">
                author = #{record.author,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.publishDate != null">
                publish_date = #{record.publishDate,jdbcType=DATE},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=DATE},
            </if>
            <if test="record.modifyDate != null">
                modify_date = #{record.modifyDate,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update book
        set id = #{record.id,jdbcType=BIGINT},
            title = #{record.title,jdbcType=VARCHAR},
            author = #{record.author,jdbcType=VARCHAR},
            description = #{record.description,jdbcType=VARCHAR},
            publish_date = #{record.publishDate,jdbcType=DATE},
            create_date = #{record.createDate,jdbcType=DATE},
            modify_date = #{record.modifyDate,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sigon.demo.domain.model.Book">
        update book
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null">
                publish_date = #{publishDate,jdbcType=DATE},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=DATE},
            </if>
            <if test="modifyDate != null">
                modify_date = #{modifyDate,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sigon.demo.domain.model.Book">
        update book
        set title = #{title,jdbcType=VARCHAR},
            author = #{author,jdbcType=VARCHAR},
            description = #{description,jdbcType=VARCHAR},
            publish_date = #{publishDate,jdbcType=DATE},
            create_date = #{createDate,jdbcType=DATE},
            modify_date = #{modifyDate,jdbcType=DATE}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>